# BOJ 1904번: 01타일 
# URL: https://www.acmicpc.net/problem/1904
# 분류: 다이나믹 프로그래밍
# 난이도: 실버 2
# 풀이 시간: 15분 

# ✅ 문제 설명 요약:
# 지원이에게 현재 1 하나만으로 이루어진 타일 또는 0타일을 두개 붙인 한 쌍의 00타일들만이 남게 되었다.
# 지원이는 타일로 더 이상 크기가 N인 모든 이진 수열을 만들 수 없게 되었다.
# N이 주어졌을 때 지원이가 만들 수 있는 크기가 N인 모든 이진수열의 가짓수를 센다. 단, 타일들은 무한히 많은 것으로 가정, 개수를 15746으로 나눈 나머지를 출력 

# ✅ 내 풀이 아이디어:
# - N을 입력받고 N까지의 이진 수열의 개수를 저장할 N+2 길이의 dp 배열을 생성한다.
# - 피보나치 수열과 같은 방식으로 해당 길이의 배열 뒤에 1이 붙는 경우, 00이 붙는 경우를 더함.
# - 길이가 N일 때, 마지막에 1을 놓았다면 앞에는 길이가 N-1인 타일 조합이 있어야 하므로 dp[N-1],
# - 마지막에 0을 놓았다면 앞에는 길이가 N-2인 타일 조합이 있어야 하므로 그 앞은 dp[N-2]가 된다.
# - 3부터 N번째 인덱스까지 반복하며 dp 배열의 해당 인덱스에 dp[N-1]+dp[N-2]를 15746으로 나눈 나머지를 저장한다.
# - 저장된 dp배열의 N번째 인덱스가 길이 N인 이진수열의 가짓수가 되므로 dp[N]을 출력 

N = int(input())

dp = [0] * (N + 2)
dp[1] = 1
dp[2] = 2

for i in range(3, N+1):
  dp[i] = (dp[i-1] + dp[i-2]) % 15746

print(dp[N])