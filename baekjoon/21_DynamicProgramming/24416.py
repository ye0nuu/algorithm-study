# BOJ 24416번: 알고리즘 수업 - 피보나치 수 1
# URL: https://www.acmicpc.net/problem/24416
# 분류: 수학, 다이나믹 프로그래밍 
# 난이도: 브론즈 1
# 풀이 시간: 30분 

# ✅ 문제 설명 요약:
# n의 피보나치 수를 재귀 호출과 동적 프로그래밍으로 구하는 의사코드를 보고 두 코드의 실행횟수를 출력 

# ✅ 내 풀이 아이디어:
# - 재귀호출 사용 시 return 1으로 피보나치수가 구해지므로 피보나치수만큼 실행되고, 동적프로그래밍 사용 시 저장된 값을 사용하므로 1과 2를 제외한 n-2번만 실행된다.
# - 따라서 동적 프로그래밍으로 n의 피보나치수를 구한 뒤 재귀호출의 실행값으로 출력하고, DP의 실행값으로 n-2를 출력한다. 

n = int(input())
F = [0 for i in range(n+1)]

def fib(n):
  F[1] = F[2] = 1
  for i in range(3, n+1):
    F[i] = F[i-1] + F[i-2]
  return F[n]

print(fib(n), n-2)